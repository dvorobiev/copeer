#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–≤—ã—á–µ–∫ –≤ CSV —Ñ–∞–π–ª–∞—Ö.
–û—á–∏—â–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å CSV –ø–∞—Ä—Å–∏–Ω–≥–æ–º.
"""

import os
import sys
from pathlib import Path

def clean_quotes_in_path(path: str) -> str:
    """
    –û—á–∏—â–∞–µ—Ç –∫–∞–≤—ã—á–∫–∏ –≤ –ø—É—Ç–∏ –æ—Ç –ø—Ä–æ–±–ª–µ–º —Å CSV —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º.
    –£–±–∏—Ä–∞–µ—Ç –≤–Ω–µ—à–Ω–∏–µ –∫–∞–≤—ã—á–∫–∏ –∏ –∑–∞–º–µ–Ω—è–µ—Ç –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –Ω–∞ –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ.
    """
    # –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –∏–∑ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if path.startswith('"') and path.endswith('"'):
        path = path[1:-1]
    
    # –ó–∞–º–µ–Ω—è–µ–º –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
    path = path.replace('""', '"')
    
    return path

def fix_csv_file(input_file: str, output_file: str):
    """
    –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–≤—ã—á–∫–∏ –≤ CSV —Ñ–∞–π–ª–µ, –æ—á–∏—â–∞—è –∏—Ö –æ—Ç –ø—Ä–æ–±–ª–µ–º —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º.
    """
    fixed_count = 0
    total_count = 0
    
    print(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {input_file}")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_file}")
    print("-" * 60)
    
    try:
        with open(input_file, 'r', encoding='utf-8', errors='ignore') as infile, \
             open(output_file, 'w', encoding='utf-8') as outfile:
            
            for line_num, line in enumerate(infile, 1):
                line = line.rstrip('\n\r')
                if not line:
                    outfile.write('\n')
                    continue
                
                total_count += 1
                
                # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ –ø–µ—Ä–≤–æ–º—É —Ç–æ—á–∫–µ —Å –∑–∞–ø—è—Ç–æ–π
                parts = line.split(';', 1)
                if len(parts) < 2:
                    outfile.write(line + '\n')
                    continue
                
                original_path = parts[0]
                rest_part = parts[1]
                
                # –û—á–∏—â–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –≤ –ø—É—Ç–∏
                cleaned_path = clean_quotes_in_path(original_path)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –ø—É—Ç—å
                if original_path != cleaned_path:
                    fixed_count += 1
                    if fixed_count <= 5:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
                        print(f"–°—Ç—Ä–æ–∫–∞ {line_num}:")
                        print(f"  –ë—ã–ª–æ:  {repr(original_path)}")
                        print(f"  –°—Ç–∞–ª–æ: {repr(cleaned_path)}")
                        print()
                
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
                cleaned_line = cleaned_path + ';' + rest_part
                outfile.write(cleaned_line + '\n')
                
                if line_num % 1000 == 0:
                    print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫: {line_num}")
        
        print("-" * 60)
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_count}")
        print(f"   –ü—É—Ç–µ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {fixed_count}")
        print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö: {(fixed_count/total_count*100):.1f}%")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
        raise

def main():
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python fix_csv_quotes.py <input_csv_file>")
        print("–ü—Ä–∏–º–µ—Ä: python fix_csv_quotes.py remaining_for_copy.csv")
        sys.exit(1)
    
    input_file = sys.argv[1]
    
    if not os.path.exists(input_file):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {input_file}")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    input_path = Path(input_file)
    output_file = str(input_path.parent / f"{input_path.stem}_fixed{input_path.suffix}")
    
    try:
        fix_csv_file(input_file, output_file)
        print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: {output_file}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()